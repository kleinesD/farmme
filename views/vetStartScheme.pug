extends base

block content
  include _rcmVet
  section.main-section.vet-module

    include _animalHeader

    -if(!forEdit)
      .animal-results-window
        .ai-form-container.ai-form-vet.ai-form-container-headerful#vet-start-scheme-container


          .ai-block-sub-title НАЧАТЬ
          .ai-block-title Ветеринарную схему

          .ai-input-block.ai-input-block-text
            .ai-input-label Дата и время
            input.ai-input.ai-input-date.ai-input-validation#date(type="datetime-local" data-animal-birth=`${animal.birthDate}`)
            .ai-input-marker.ai-input-marker-r
              ion-icon(name="alert")
            .ai-input-explain-block.ai-input-explain-block-required
              .ai-input-eb-tri
              .ai-input-eb-text Обязательно

          .ai-input-block.ai-input-block-select
            .ai-select-line
            .ai-input-label Схема
            input.ai-input.ai-input-select(type="text" placeholder="Название схемы")
            .ai-select-block.shadow#scheme
              each scheme in schemes
                .ai-select-item(data-id=`${scheme._id}`)
                  p.ai-select-name= scheme.name
                  p.ai-select-sub-name= `Шагов: ${scheme.points.length}`
            
            .ai-input-marker.ai-input-marker-r
              ion-icon(name="alert")
            .ai-input-explain-block.ai-input-explain-block-required
              .ai-input-eb-tri
              .ai-input-eb-text Обязательно

          a.ai-input-submit-btn(data-animal-id=`${animal._id}`) Сохранить
    -if(forEdit)
      .animal-results-window
        .ai-form-container.ai-form-vet.ai-form-container-headerful#edit-vet-start-scheme-container


          .ai-block-sub-title РЕДАКТИРОВАТЬ
          .ai-block-title Начатую ветеринарную схему

          .ai-input-block.ai-input-block-text
            .ai-input-label Дата и время
            input.ai-input.ai-input-date.ai-input-validation#date(type="datetime-local" data-animal-birth=`${animal.birthDate}` value=`${firstSchemeAction.date.toLocaleString('ru-RU', {year: 'numeric'})}-${firstSchemeAction.date.toLocaleString('ru-RU', {month: '2-digit'})}-${firstSchemeAction.date.toLocaleString('ru-RU', {day: '2-digit'})}T${firstSchemeAction.date.toLocaleString('ru-RU', {hour: '2-digit'})}:${firstSchemeAction.date.toLocaleString('ru-RU', {minute: '2-digit'}).length < 2 ? `0${firstSchemeAction.date.toLocaleString('ru-RU', {minute: '2-digit'})}` : firstSchemeAction.date.toLocaleString('ru-RU', {minute: '2-digit'})}`)
            .ai-input-marker.ai-input-marker-r
              ion-icon(name="alert")
            .ai-input-explain-block.ai-input-explain-block-required
              .ai-input-eb-tri
              .ai-input-eb-text Обязательно

          .ai-input-block.ai-input-block-select
            .ai-select-line
            .ai-input-label Схема
            input.ai-input.ai-input-select(type="text" placeholder="Название схемы")
            .ai-select-block.shadow#scheme
              each scheme in schemes
                .ai-select-item(data-id=`${scheme._id}` class=`${firstSchemeAction.scheme._id.toString() === scheme._id.toString() ? 'ai-select-item-selected' : ''}`)
                  p.ai-select-name= scheme.name
                  p.ai-select-sub-name= `Шагов: ${scheme.points.length}`
            
            .ai-input-marker.ai-input-marker-r
              ion-icon(name="alert")
            .ai-input-explain-block.ai-input-explain-block-required
              .ai-input-eb-tri
              .ai-input-eb-text Обязательно

          a.ai-input-submit-btn(data-animal-id=`${animal._id}` data-action-id=`${firstSchemeAction._id}`) Сохранить




